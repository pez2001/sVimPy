	sVimPy-0.55

sVimPy is a very small Python virtual machine intended for use in microcontroller projects.

It supports most of the opcodes used in python3k.(except 6 opcodes used in classes,6 used for exception handling,1 to build slices, 1 to unpack objects,1 to yield)
The intended goal is to use this VM in environments like Atmel's ATmega chips (2-8kb RAM).
Classes,slices and generators are not supported at the moment.
Most data types are supported including floats,ints,strings,tuples,dicts,lists.

The microcontroller bootloader is still missing (no arduinos left for experimentation).


Features include: 

 * function calling
 * a stack based VM
 * garbage collection
 * very low memory usage
 * an interactive debugging console
 * dictionaries and tuples
 * iterations 
 * VM single stepping (game loop usage is possible)
 * C function calling,
 * a small memory footprint
 * fast performance
 * the ability to be used as a library in other projects
 * simple API + code
 * possible usage as a small deployment executable for Python projects

 
	Roadmap :
	
	0.2    correct interpretation of function parameters
	0.3    implement closures and refs
	0.4    better implementation of generators/iterators and implement yield opcode
	0.5    implement streams for reading
	0.55  fix function calls bugs introduced during rewrite of some code parts
	0.6    internal functions
	0.7    add module import abilities
	0.75  stream writing/printing + sd-fat support
	0.8    vm feature complete (except classes ,exceptions and some builtin functions)
	0.9    memory optimizations
	1.0    stable release + real life applications
	1.1    custom bootloader
	2.0    slices
	2.1    classes
	
	
	
	
	