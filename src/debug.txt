rm -f unit_test.exe *.o *.a *.so svimpy.src.tar.gz
gcc -W -w -O2 -std=c99  -c -o vm.o vm.c
gcc -W -w -O2 -std=c99  -c -o strops.o strops.c
gcc -W -w -O2 -std=c99  -c -o numops.o numops.c
gcc -W -w -O2 -std=c99  -c -o opcodes.o opcodes.c
gcc -W -w -O2 -std=c99  -c -o object.o object.c
gcc -W -w -O2 -std=c99  -c -o memory.o memory.c
gcc -W -w -O2 -std=c99  -c -o stack.o stack.c
gcc -W -w -O2 -std=c99  -c -o lists.o lists.c
gcc -W -w -O2 -std=c99  -c -o internal_functions.o internal_functions.c
gcc -W -w -O2 -std=c99  -c -o stream.o stream.c
gcc -W -w -O2 -std=c99  -c -o garbage.o garbage.c
ar -rs vm.a vm.o strops.o numops.o opcodes.o object.o memory.o stack.o lists.o internal_functions.o stream.o garbage.o
gcc -W -w -O2 -std=c99  -c -o unit_tests.o unit_tests.c
gcc unit_tests.o vm.a  -o unit_test 
unit_test.exe
executing object:tests/test12.pyc
[1,64h] opcode: [ LOAD_CONST ] (0)
	(2)(5e12a8)code object
	name: func
	-- code object
[4,84h] opcode: [ MAKE_FUNCTION ] (0)
[7,5ah] opcode: [ STORE_NAME ] (0)
decreased object ref_count
(1)(525ec08)unicode object: func
	(2)(5e12a8)code object
	name: func
	-- code object
[10,64h] opcode: [ LOAD_CONST ] (1)
	(2)(525ec40)code object
	name: rek
	-- code object
[13,84h] opcode: [ MAKE_FUNCTION ] (0)
[16,5ah] opcode: [ STORE_NAME ] (1)
decreased object ref_count
(1)(525ec28)unicode object: rek
	(2)(525ec40)code object
	name: rek
	-- code object
[19,65h] opcode: [ LOAD_NAME ] (0)
	(3)(5e12a8)code object
	name: func
	-- code object
[22,83h] opcode: [ CALL_FUNCTION ] (0)
executing direct local function object: func
[1,64h] opcode: [ LOAD_CONST ] (1)
	(2)(5e1498)code object
	name: sub_func
	-- code object
[4,84h] opcode: [ MAKE_FUNCTION ] (0)
[7,7dh] opcode: [ STORE_FAST ] (0)
decreased object ref_count
(1)(525ea38)unicode object: sub_func
	(2)(5e1498)code object
	name: sub_func
	-- code object
[10,64h] opcode: [ LOAD_CONST ] (2)
	(2)(525e878)int object: 1
[13,7dh] opcode: [ STORE_FAST ] (1)
decreased object ref_count
(1)(525ea48)unicode object: x
	(2)(525e878)int object: 1
[16,7ch] opcode: [ LOAD_FAST ] (1)
	(3)(525e878)int object: 1
[19,64h] opcode: [ LOAD_CONST ] (2)
	(4)(525e878)int object: 1
[22,17h] opcode: [ BINARY_ADD ]
1 + 1 = 2 (2)
[23,7dh] opcode: [ STORE_FAST ] (1)
decreased object ref_count
(1)(525e878)int object: 1
	(1)(5e8a90)int object: 2
[26,7ch] opcode: [ LOAD_FAST ] (1)
	(2)(5e8a90)int object: 2
[29,7ch] opcode: [ LOAD_FAST ] (1)
	(3)(5e8a90)int object: 2
[32,17h] opcode: [ BINARY_ADD ]
2 + 2 = 4 (4)
[33,64h] opcode: [ LOAD_CONST ] (3)
	(2)(525e888)int object: 2
[36,17h] opcode: [ BINARY_ADD ]
2 + 4 = 6 (6)
object has no refs
(0)(5e8aa0)int object: 4
[37,64h] opcode: [ LOAD_CONST ] (3)
	(2)(525e888)int object: 2
[40,1bh] opcode: [ BINARY_TRUE_DIVIDE ]
6 / 2 = 3 (3)
object has no refs
(0)(5e8ac0)int object: 6
[41,7dh] opcode: [ STORE_FAST ] (1)
	(1)(5e8ab0)int object: 3
[44,7ch] opcode: [ LOAD_FAST ] (1)
	(2)(5e8ab0)int object: 3
[47,7ch] opcode: [ LOAD_FAST ] (1)
	(3)(5e8ab0)int object: 3
[50,17h] opcode: [ BINARY_ADD ]
3 + 3 = 6 (6)
[51,64h] opcode: [ LOAD_CONST ] (2)
	(2)(525e878)int object: 1
[54,18h] opcode: [ BINARY_SUBTRACT ]
6 - 1 = 5 (5)
object has no refs
(0)(5e8aa0)int object: 6
[55,7dh] opcode: [ STORE_FAST ] (1)
	(1)(5e8ad0)int object: 5
[58,74h] opcode: [ LOAD_GLOBAL ] (0)
searching for:rek
	(2)(5e8ee0)kv object
	(1)(525ec28)unicode object: rek
		(2)(525ec40)code object
		name: rek
		-- code object
[61,7ch] opcode: [ LOAD_FAST ] (1)
	(2)(5e8ad0)int object: 5
[64,83h] opcode: [ CALL_FUNCTION ] (1)
executing direct local function object: rek
decreased object ref_count
(1)(525eb58)unicode object: e
[1,7ch] opcode: [ LOAD_FAST ] (0)
	(3)(5e8ad0)int object: 5
[4,64h] opcode: [ LOAD_CONST ] (1)
	(2)(525eae8)int object: 1000
[7,6bh] opcode: [ COMPARE_OP ] (0)
[10,72h] opcode: [ POP_JUMP_IF_FALSE ] (31)
object has no refs
(0)(5e8ab0)true object
[13,74h] opcode: [ LOAD_GLOBAL ] (0)
searching for:rek
	(2)(5e8ee0)kv object
	(1)(525ec28)unicode object: rek
		(2)(525ec40)code object
		name: rek
		-- code object
[16,7ch] opcode: [ LOAD_FAST ] (0)
	(3)(5e8ad0)int object: 5
[19,7ch] opcode: [ LOAD_FAST ] (0)
	(4)(5e8ad0)int object: 5
[22,14h] opcode: [ BINARY_MULTIPLY ]
ma:5
[23,83h] opcode: [ CALL_FUNCTION ] (1)
executing direct local function object: rek
decreased object ref_count
(1)(5e8ad0)int object: 5
[1,7ch] opcode: [ LOAD_FAST ] (0)
	(2)(5e8ab0)int object: 25
[4,64h] opcode: [ LOAD_CONST ] (1)
	(2)(525eae8)int object: 1000
[7,6bh] opcode: [ COMPARE_OP ] (0)
[10,72h] opcode: [ POP_JUMP_IF_FALSE ] (31)
object has no refs
(0)(5e8b00)true object
[13,74h] opcode: [ LOAD_GLOBAL ] (0)
searching for:rek
	(2)(5e8ee0)kv object
	(1)(525ec28)unicode object: rek
		(2)(525ec40)code object
		name: rek
		-- code object
[16,7ch] opcode: [ LOAD_FAST ] (0)
	(2)(5e8ab0)int object: 25
[19,7ch] opcode: [ LOAD_FAST ] (0)
	(3)(5e8ab0)int object: 25
[22,14h] opcode: [ BINARY_MULTIPLY ]
ma:25
[23,8